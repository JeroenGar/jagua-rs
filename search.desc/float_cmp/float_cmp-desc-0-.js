searchState.loadedDescShard("float_cmp", 0, "float-cmp\nA trait for approximate equality comparisons.\nApproxEqRatio is a trait for approximate equality …\nApproxEqUlps is a trait for approximate equality …\nA floating-point type used for epsilon values\nThis type defines a margin within two <code>f32</code> values might be …\nThis type defines a margin within two <code>f64</code> values might be …\nA margin specifying a maximum distance two floating point …\nAn integer type used for ulps values\nThis type type defines a margin within which two values …\nA trait for floating point numbers which computes the …\nThis method tests that the <code>self</code> and <code>other</code> values are equal …\nThis method tests if <code>self</code> and <code>other</code> are nearly equal by …\nThis method tests if <code>self</code> and <code>other</code> are nearly equal by …\nThis method tests for <code>self</code> and <code>other</code> values to be …\nThis method tests that the <code>self</code> and <code>other</code> values are not …\nThis method tests that the <code>self</code> and <code>other</code> values are not …\nThis method tests if <code>self</code> and <code>other</code> are not nearly equal …\nThis method tests if <code>self</code> and <code>other</code> are not nearly equal …\nThis method tests for <code>self</code> and <code>other</code> values to be not …\nThis method tests for <code>self</code> and <code>other</code> values to be not …\nSet the epsilon value for this margin\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe next representable number above this one\nThe previous representable number below this one\nThe number of representable values or ULPs (Units of Least …\nSet the ulps value for this margin\nZero margin")