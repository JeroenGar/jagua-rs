searchState.loadedDescShard("geographiclib_rs", 0, "A subset of geographiclib implemented in Rust.\nPlace a second point, given the first point, an azimuth, …\nA geodesic line.\nMeasure the distance (and other values) between two points.\nCompute the perimeter and area of a polygon on a Geodesic.\nClockwise or CounterClockwise winding\nreturns (a12, lat2, lon2, azi2, s12, m12, M12, M21, S12)\nPlace a point at a given distance along this line.\nAdd an edge to the polygon using an azimuth (in degrees) …\nAdd a point to the polygon\nGet the area of the geodesic in square meters\nConsumes the PolygonArea and returns the following tuple:\nSee the documentation for the DirectGeodesic trait.\nSee the documentation for the DirectGeodesic trait.\nSee the documentation for the DirectGeodesic trait.\nSee the documentation for the DirectGeodesic trait.\nSee the documentation for the DirectGeodesic trait.\nSee the documentation for the DirectGeodesic trait.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee the documentation for the InverseGeodesic trait.\nSee the documentation for the InverseGeodesic trait.\nSee the documentation for the InverseGeodesic trait.\nSee the documentation for the InverseGeodesic trait.\nSee the documentation for the InverseGeodesic trait.\nSee the documentation for the InverseGeodesic trait.\nSee the documentation for the InverseGeodesic trait.\nSee the documentation for the InverseGeodesic trait.\nCreate a new geodesic line from an initial point and …\nCreate a new PolygonArea using a Geodesic.\nCheck what the perimeter and area would be if this edge …\nCheck what the perimeter and area would be if this point …")